{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","messages","ava","src","avatar","angle","content","name","text","message","time","messageData","HW1","Affair","affair","priority","HighPriority","MiddlePriority","lowPriority","deleteButton","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","affairs","filterButtons","filter","active","setFilter","defaultAffairs","HW2","useState","setAffairs","filteredAffairs","filterAffairs","f","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","inputStandard","buttonClass","addButtonDisabled","addButton","title","inputForm","value","onChange","disabled","counter","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","length","currentTarget","trim","newUser","id","v1","alert","HW3","setUsers","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","SuperSelect","options","onChangeOption","mappedOptions","o","i","SuperRadio","onChangeCallback","arr","HW7","PreJunior","Error404","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","wrap","activeClassName","Active","menu","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.efefdfc5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Greeting_content__2kJjm\",\"title\":\"Greeting_title__3e6P5\",\"inputForm\":\"Greeting_inputForm__LMfCE\",\"inputStandard\":\"Greeting_inputStandard__7rwV6\",\"addButton\":\"Greeting_addButton__1KqMw\",\"addButtonDisabled\":\"Greeting_addButtonDisabled__3dyMi\",\"counter\":\"Greeting_counter__3_r1M\",\"error\":\"Greeting_error__3Ttku\",\"errorMessage\":\"Greeting_errorMessage__2X3ZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Header_wrap__18tYD\",\"a\":\"Header_a__2B2Tx\",\"Active\":\"Header_Active__2uAFW\",\"menu\":\"Header_menu__2dVU4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1i2Fo\",\"content\":\"Message_content__2Flnx\",\"angle\":\"Message_angle__2dI2d\",\"ava\":\"Message_ava__16hUc\",\"name\":\"Message_name__1qE0-\",\"text\":\"Message_text__1nfJ6\",\"time\":\"Message_time__38lKi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Affair_content__16V8N\",\"name\":\"Affair_name__1Xkaa\",\"priority\":\"Affair_priority__103fa\",\"deleteButton\":\"Affair_deleteButton__-vq_n\",\"HighPriority\":\"Affair_HighPriority__2Qx_I\",\"MiddlePriority\":\"Affair_MiddlePriority__2saCd\",\"lowPriority\":\"Affair_lowPriority__2UElZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Affairs_content__1ZYd1\",\"affairs\":\"Affairs_affairs__2iCU4\",\"filterButtons\":\"Affairs_filterButtons__1hd3f\",\"active\":\"Affairs_active__yGrUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__38x8A\",\"errorInput\":\"SuperInputText_errorInput__3odnu\",\"error\":\"SuperInputText_error__2rcvn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3c1S7\",\"column\":\"HW4_column__1VbMg\",\"testSpanError\":\"HW4_testSpanError__3_7gu\",\"Input\":\"HW4_Input__7wC-q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2j4B3\",\"red\":\"SuperButton_red__1xUOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__y7baR\",\"spanClassName\":\"SuperCheckbox_spanClassName__2fDDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1PSNz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__1TzoY\"};","import React from 'react'\r\nimport s from \"./Message.module.css\"\r\n\r\ntype MessageType = {\r\n    avatar: any\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    return (\r\n        <div className={s.messages}>\r\n            <div className={s.ava}>\r\n                <img src={props.avatar}/>\r\n            </div>\r\n            <div className={s.angle}/>\r\n            <div className={s.content}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.text}>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://www.meme-arsenal.com/memes/6a3fa10dd6d17518c5a55a98f819015b.jpg',\r\n    name: 'Агент ФСБ',\r\n    message: 'Эй, выключай камеру когда развлекаешься, я не хочу на это смотреть!',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from \"./Affair.module.css\"\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    const colorForPriority = () => {\r\n        if(props.affair.priority === 'high'){\r\n            return s.HighPriority\r\n        }else if(props.affair.priority === 'middle'){\r\n            return s.MiddlePriority\r\n        }else if(props.affair.priority === 'low'){\r\n            return s.lowPriority\r\n        }\r\n        return\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.name}>{props.affair.name}</div>\r\n            <div className={s.priority}>\r\n                <div className={colorForPriority()}>\r\n                    {props.affair.priority}\r\n                </div>\r\n            </div>\r\n            <button className={s.deleteButton} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n\r\n\r\n// user => click =>\r\n\r\n\r\n// onClick => deleteCallback => props.deleteAffarCallback( arg )","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from \"./Affairs.module.css\"\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter:FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter(\"all\")\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter(\"high\")\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter(\"middle\")\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter(\"low\")\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.affairs}>\r\n                {mappedAffairs}\r\n            </div>\r\n            <div className={s.filterButtons}>\r\n                <button className={props.filter === 'all'? s.active: ''} onClick={setAll}>All</button>\r\n                <button className={props.filter === 'high'? s.active: ''} onClick={setHigh}>High</button>\r\n                <button className={props.filter === 'middle'? s.active: ''} onClick={setMiddle}>Middle</button>\r\n                <button className={props.filter === 'low'? s.active: ''} onClick={setLow}>Low</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\n\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low' // need to fix any DONE\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix DONE\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\r\n\r\n    if (filter === 'high') {\r\n        return affairs.filter(a => a.priority === \"high\")\r\n    }\r\n    if (filter === 'middle') {\r\n        return affairs.filter(a => a.priority === \"middle\")\r\n    }\r\n    if (filter === 'low') {\r\n        return affairs.filter(a => a.priority === \"low\")\r\n    }\r\n    return affairs\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return affairs.filter(f => f._id !== _id)// need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (value: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = `${s.error} ${s.inputStandard}`  // need to fix with (?:)\r\n    const buttonClass = error ? s.addButtonDisabled : s.addButton\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.title}>Add User name</div>\r\n            <div className={s.inputForm}>\r\n                <input value={name} onChange={setNameCallback} className={error ? inputClass : s.inputStandard}/>\r\n                <button className={buttonClass} disabled={!!error} onClick={addUser}>add</button>\r\n                <span className={s.counter}>Total Users: <span>{totalUsers}</span></span>\r\n            </div>\r\n            <div className={s.errorMessage}>{error}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport { v1 } from 'uuid';\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback:(newUser: UserType)=>void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (value:ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(value.currentTarget.value)\r\n        setError('')// need to fix\r\n    }\r\n    const addUser = () => {\r\n        if (name.trim() !==\"\"){\r\n            let newUser = {id:v1(), name:name}\r\n            addUserCallback(newUser)\r\n            alert(`Hello  ! ` + newUser.name)\r\n            setName(\"\")\r\n        }else {\r\n            setError(\"add current Name\")\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport { v1 } from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (newUser: UserType) => { // need to fix any\r\n        setUsers([newUser,...users]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users}\r\n                               addUserCallback={addUserCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className ? className : s.superInput}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean ) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                checked={restProps.checked}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    /*className={s.Input}*/\r\n                    /*spanClassName={s.testSpanError}*/\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from \"./SuperEditableSpan.module.css\"\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n        setEditMode(false)\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false)\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.span} ${className ? className: \"\"}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        ✎{children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState<string>('editable-span-value', \"\"))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o,i)=>(\r\n        <option key={0 + \"-\" + i} value={o}>{o}</option>\r\n    )):[] // map options with key\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select value={restProps.value} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                // name, checked, value, onChange\r\n                name={name}\r\n                onChange={onChangeCallback}\r\n                checked={o === value}\r\n                value={o}\r\n                {...restProps}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\nimport HW7 from \"../../h7/HW7\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n            <HW7/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            PreJunior\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n\r\n\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from \"./Routes\";\r\nimport s from \"./Header.module.css\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.wrap}>\r\n                <NavLink className={s.a} activeClassName={s.Active} to={PATH.PRE_JUNIOR}><span>PreJunior</span></NavLink>\r\n                <NavLink className={s.a} activeClassName={s.Active} to={PATH.JUNIOR}><span>Junior</span></NavLink>\r\n                <NavLink className={s.a} activeClassName={s.Active} to={PATH.JUNIOR_PLUS}><span>Junior Plus</span></NavLink>\r\n                <div className={s.menu}>| Menu</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={s.App}>\r\n                <div>React homeworks:</div>\r\n                {/*<HW1/>*/}\r\n                {/*<HW2/>*/}\r\n                {/*<HW3/>*/}\r\n                {/*<HW4/>*/}\r\n                <HW5/>\r\n\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}